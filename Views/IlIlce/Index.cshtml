@model moto.Models.IlIlceViewModel

@{
    ViewBag.Title = "Index";
}


@{ Layout = null;}

<script type="text/javascript">
    $(function () {


        $("#IlId").change(function () {
            //alert("sdasd");
            var selectedItem = $(this).val();
            var ddlIlceler = $("#IlceId");
            var statesProgress = $("#ilceler-loading-progress");
            statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl("GetAllIlcesByIlId"))",
                data: { "IlId": selectedItem },
                success: function (data) {
                    ddlIlceler.html('');
                    $.each(data, function (id, option) {
                        ddlIlceler.append($('<option></option>').val(option.id).html(option.name));
                    });
                    statesProgress.hide();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('İlçeler getirilirken sorun oluştu.');
                    statesProgress.hide();
                }
            });
        });




        $("#IlceId").change(function () {
            var selectedItem = $(this).val();
            var ddlSemtler = $("#SemtId");
            var statesProgress = $("#Semtler-loading-progress");
            statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl("GetSemtsByIlceId"))",
                data: { "IlceId": selectedItem },
                success: function (data) {
                    ddlSemtler.html('');
                    $.each(data, function (id, option) {
                        ddlSemtler.append($('<option></option>').val(option.id).html(option.name));
                    });
                    statesProgress.hide();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Semtler getirilirken sorun oluştu.');
                    statesProgress.hide();
                }
            });
        });



        $("#SemtId").change(function () {
            var selectedItem = $(this).val();
            var ddlMahalleler = $("#MahalleId");
            var statesProgress = $("#Mahalleler-loading-progress");
            statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl("GetMahallesBySemtId"))",
                data: { "SemtId": selectedItem },
            success: function (data) {
                ddlMahalleler.html('');
                $.each(data, function (id, option) {
                    ddlMahalleler.append($('<option></option>').val(option.id).html(option.name));
                });
                statesProgress.hide();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Mahalleler getirilirken sorun oluştu.');
                statesProgress.hide();
            }
        });
    });



        $("#MahalleId").change(function () {
            var selectedItem = $(this).val();
            var ddlPostaKodlari = $("#PostaKoduId");
            var statesProgress = $("#PostaKodlari-loading-progress");
            statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl("GetPostaKodsByMahalleId"))",
                data: { "MahalleId": selectedItem },
            success: function (data) {
                ddlPostaKodlari.html('');
                $.each(data, function (id, option) {
                    ddlPostaKodlari.append($('<option></option>').val(option.id).html(option.name));
                });
                statesProgress.hide();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Mahalleler getirilirken sorun oluştu.');
                statesProgress.hide();
            }
        });
    });







    });
</script>


    <table>
        <tr>
            <td>
                @Html.LabelFor(model => model.IlId)
                @Html.DropDownListFor(model => model.IlId, Model.AvailableIls)
            </td>
            <td>
                @Html.LabelFor(model => model.IlceId)
                @Html.DropDownListFor(model => model.IlceId, Model.AvailableIlces)
                <span id="ilceler-loading-progress" style="display: none;">İlçeler yükleniyor..</span>
            </td>
            <td>
                @Html.LabelFor(model => model.SemtId)
                @Html.DropDownListFor(model => model.SemtId, Model.AvailableSemts)
                <span id="Semtler-loading-progress" style="display: none;">Semtler yükleniyor..</span>
            </td>
            <td>
                @Html.LabelFor(model => model.MahalleId)
                @Html.DropDownListFor(model => model.MahalleId, Model.AvailableMahalles)
                <span id="Mahalleler-loading-progress" style="display: none;">Mahalleler yükleniyor..</span>
            </td>

            <td>
                @Html.LabelFor(model => model.PostaKoduId)
                @Html.DropDownListFor(model => model.PostaKoduId, Model.AvailablePostaKods)
                <span id="PostaKodlari-loading-progress" style="display: none;">Posta kodları yükleniyor..</span>
            </td>

        </tr>
    </table>

